npm init

"dependencies": {
    "body-parser": "^1.20.2",
    "bootstrap": "4.6",
    "cors": "2.8.5",
    "express": "4.18.2",
    "mysql": "2.18.1",
    "nodemon": "3.0.2"

npm install

create new folder "db"

create new file in it "dbconnect.js"


const mysql=require("mysql");
var mysqlconnection=mysql.createConnection({
    host:'127.0.0.1',
    user:'root',
    password:'root123',
    database:'iacsd0923',
    port:3306
});

mysqlconnection.connect((err)=>{
    if(!err){
        console.log("Connected Successfully")
    }else{
        console.log("Error in connection",err);
    }
});

module.exports=mysqlconnection;



create new file "app.js"

const express=require("express");
const cors=require("cors");
const bodyparser=require("body-parser");
const routes=require("./Routes/routers");
const app=express();

app.use(cors());

app.use(bodyparser.urlencoded({extended:false}));

app.use(bodyparser.json());

app.use("/",routes);

app.listen(9000,function(){
    console.log("Server has been connected")
});

module.exports=app;



create new folder "Routers"

create new file "routers.js"

const express=require("express");
var myrouter=express.Router();
//connection is same as mysqlconnection in dbconnet.js
var connection=require("../db/dbconnect")

//to display all products in tabular form
myrouter.get("/products",function(req,resp){
    connection.query("select * from product",(err,data,fileds)=>{
        if(err){
            resp.status(500).send("no data found");
        }
        else{
            console.log(data);
            console.log(fileds);
            resp.send(data);
        }
    })

});
myrouter.get("/products/:pid",function(req,resp){
    connection.query("select * from product where pid=?",req.params.pid,(err,data,fileds)=>{
        if(err){
            resp.status(500).send("no data found");
        }
        else{
            console.log(data);
            console.log(fileds);
            resp.send(data[0]);
        }
    })

});


//to add new product in the table
myrouter.post("/products/product/:pid",function(req,resp){
    console.log(req.body);
    connection.query("insert into product values(?,?,?,?)",[req.body.pid,req.body.pname,req.body.qty,req.body.price],(err,result)=>{
        if(err){
            resp.status(500).send("no data added");
        }else{
            console.log(result);
            resp.send("added successfully");
        }

    })
});

//to delete product from the table
myrouter.delete("/products/:prodid",function(req,resp){
    connection.query("delete from product where pid=?",[req.params.prodid],(err,result)=>{
        if(err){
            resp.status(500).send("no data deleted");
        }else{
            resp.send("data deleted successfully")
        }
    })
})


//to update product in the table
myrouter.put("/products/product/:pid",function(req,resp){
    connection.query("update product set pname=?,qty=?,price=? where pid=?",[req.body.pname,req.body.qty,req.body.price,req.body.pid],(err,result)=>{
        if(err){
            resp.status(500).send("no data added");
        }else{
            console.log(result);
            resp.send("updates successfully");
        }

    })
});


//it will pass the reference of myrouter in router variable of app.js file
module.exports=myrouter;


write command node.js



FOR FRONTEND

create new folder name "front-end"

npx create-react-app frontend

cd frontend

npm start

npm install bootstrap@4.6 react-bootstrap

npm install react-router-dom

in index.js write one line
import {BrowserRouter} from 'react-router-dom';

in line 11 add <BrowserRouter> tag and include <app> tag in it


create new folder in src names "Components"

write this in app.js under src
import HomeComponent from './Components/HomeComponent';

write this in app.js under <div> tag<h1 style={{"backgroundColor":"blue",color:"white","border":"2px solid red"}}>Product Management System</h1>
       {/* step3  */}
       <MainNavBar></MainNavBar>
       <Routes>
            <Route path="/home" element={<HomeComponent></HomeComponent>}></Route>
            <Route path="/table" element={<ProductTable></ProductTable>}></Route>
            <Route path="/list" element={<ProductList></ProductList>}></Route>
            <Route path="/form" element={<ProductFrom></ProductFrom>}></Route>
            <Route path="/edit/:pid" element={<ProductEdit></ProductEdit>}></Route>
            <Route path="/view/:pid" element={<ProductCard></ProductCard>}></Route>
           
       </Routes>
	   
	   
	   
npm start

create new folder in src named "Service"